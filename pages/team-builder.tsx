import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState } from "react";
import { getRandomTeam } from '../modules';
import { Pokemon } from '../modules/pokeApiTypes';
import { Loading, NavMenu } from '../components';

function capitalize(str: string): string {
  const transformed = str[0].toUpperCase() + str.slice(1);
  return transformed;
}

export default function TeamBuilder() {
  const [team, setTeam] = useState<Pokemon[]>();
  const [debounce, setDebounce] = useState(false);
  const [loading, setLoading] = useState(false);
  const [rolls, setRolls] = useState(3);

  const generateTeam = () => {
    if (rolls === 0) {
      alert("You've used up all your re-rolls. What you see is what you got!");
      return;
    }
    if(debounce) {
      console.log('waiting for debounce)');
      return;
    }
    setLoading(true);
    getRandomTeam()
      .then(data => {
        setTeam(data);
        setLoading(false);
      });
    setRolls(rolls - 1);
    setDebounce(true);
    setTimeout(() => {
      setDebounce(false)
      console.log('debounce reset');
    }, 5000);
  }
  
  return (
    <div className={styles.container}>
      <Head>
        <title>PokeApp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <NavMenu />

      <main className='h-full flex flex-col items-center justify-center'>
        <h1 className='text-7xl mb-4'>
          This is <span className='text-red-700'>Poke</span><span className='text-gray-200'>App</span>!
        </h1>
        
        <div className="my-auto w-full flex flex-col items-center">
          {loading ? <Loading/> : team ? 
            <div className='w-full flex flex-col items-center'>
              <h2 className='mb-3 font-bold text-3xl text-yellow-200'>Your Team:</h2>
              <div className="grid grid-cols-3 gap-8 mb-4">
                {team.map(pokemon => 
                  <div key={pokemon.id}>
                    <h3 className="text-center font-bold text-lg">
                      {capitalize(pokemon.name)}
                    </h3> 
                    <img 
                      src={pokemon.sprites.front} 
                      width='200' height='200' 
                      alt={capitalize(pokemon.name)} 
                      style={{imageRendering: 'pixelated'}} 
                      className='border-2 p-4 border-zinc-200 bg-gray-900 disable'
                    />
                  </div>
                )}
              </div>
            </div>
          : null}

          {rolls > 0 ? 
            <button className={`my-2 border-1 rounded-md px-4 py-2 w-60 bg-gray-300 font-semibold text-lg text-gray-900 ${rolls > 0 ? '' : 'disabled'} disabled:opacity-50`}
            onClick={generateTeam} 
            >
              GENERATE A TEAM
            </button>
          : null}
          
          <p className='my-2 font-bold text-gray-100'> {rolls} re-rolls remaining</p>
          
          {team ?
            <button className="my-2 border-2 border-gray-100 rounded-md px-4 py-2 w-32 bg-gray-900 font-bold text-2xl text-gray-200 hover:scale-125 transition-all hover:invert" 
              onClick={() => alert('Redirect to Battle Page')} 
            >
              Battle!
            </button>
          : null}
          
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}